import os
import json
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    CallbackContext,
    CallbackQueryHandler,
)
from dotenv import load_dotenv

# ====== –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω ======
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# ====== –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –±–∞–∑—É ======
if os.path.exists("knowledge.json"):
    with open("knowledge.json", "r", encoding="utf-8") as f:
        data = json.load(f)
        questions = data["questions"]
        answers = data["answers"]
else:
    questions = [
        "–ü—Ä–∏–≤–µ—Ç",
        "–ö–∞–∫ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É SMART UKGU?",
        "–ß—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ –∑–∞–±—ã–ª –ø–∞—Ä–æ–ª—å?",
        "–ö—É–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π?",
    ]
    answers = [
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º Telegram-–±–æ—Ç–µ –Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –∏–º–µ–Ω–∏ –ú. –ê—É—ç–∑–æ–≤–∞",
        "–í—Ö–æ–¥ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ https://smart.ukgu.kz –ø–æ–¥ –ª–æ–≥–∏–Ω–æ–º –∏ –ø–∞—Ä–æ–ª–µ–º.",
        "–ù–∞–∂–º–∏—Ç–µ '–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?' –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–µ—Ä–µ–∑ –ø–æ—á—Ç—É –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –¥–µ–∫–∞–Ω–∞—Ç.",
        "–ú–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –∏–ª–∏ –≤ –¥–µ–∫–∞–Ω–∞—Ç —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞.",
    ]

def save_knowledge():
    with open("knowledge.json", "w", encoding="utf-8") as f:
        json.dump(
            {"questions": questions, "answers": answers},
            f,
            ensure_ascii=False,
            indent=4,
        )

# ====== –í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è ======
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(questions)

def retrain():
    global X, vectorizer
    vectorizer = TfidfVectorizer()
    X = vectorizer.fit_transform(questions)

def chatbot(query):
    query_vec = vectorizer.transform([query])
    sims = cosine_similarity(query_vec, X).flatten()
    best_idx = sims.argmax()
    if sims[best_idx] < 0.3:  # –µ—Å–ª–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –Ω–∏–∑–∫–∞—è
        return None
    return answers[best_idx]

# ====== –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ======
def start(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("üéì –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞–º", callback_data="abit")],
        [InlineKeyboardButton("üìö –°—Ç—É–¥–µ–Ω—Ç–∞–º", callback_data="students")],
        [InlineKeyboardButton("‚òé –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")],
        [InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ò–ò", callback_data="ask_ai")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —á–∞—Ç-–±–æ—Ç –Æ–ö–£ –∏–º. –ú.–û. –ê—É—ç–∑–æ–≤–∞!\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
        reply_markup=reply_markup,
    )

# ====== –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ ======
def button(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()

    # --- –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞–º ---
    if query.data == "abit":
        keyboard = [
            [InlineKeyboardButton("üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã", callback_data="abit_docs")],
            [InlineKeyboardButton("üóì –°—Ä–æ–∫–∏ –ø—Ä–∏—ë–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏", callback_data="abit_dates")],
            [InlineKeyboardButton("üéØ –ü—Ä–æ–≥—Ä–∞–º–º—ã", callback_data="abit_programs")],
            [InlineKeyboardButton("üí∞ –ì—Ä–∞–Ω—Ç—ã –∏ —Å—Ç–∏–ø–µ–Ω–¥–∏–∏", callback_data="abit_grants")],
            [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–∏—ë–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏", callback_data="abit_contacts")],
            [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="main_menu")]
        ]
        query.edit_message_text(
            "üéì –†–∞–∑–¥–µ–ª –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:", 
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    elif query.data == "abit_docs":
        query.edit_message_text(
            "üìÑ –î–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω—É–∂–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã:\n\n"
            "- –ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –∏–º—è —Ä–µ–∫—Ç–æ—Ä–∞\n"
            "- –ê—Ç—Ç–µ—Å—Ç–∞—Ç (–æ—Ä–∏–≥–∏–Ω–∞–ª)\n"
            "- –§–æ—Ç–æ 3x4 (6 —à—Ç.)\n"
            "- –ö–æ–ø–∏—è —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏\n"
            "- –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ (075-–£)\n"
            "- –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ï–ù–¢ (–µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è)\n"
        )

    elif query.data == "abit_dates":
        query.edit_message_text(
            "üóì –°—Ä–æ–∫–∏ –ø—Ä–∏—ë–º–∞:\n\n"
            "- –ü—Ä–∏—ë–º –∑–∞—è–≤–ª–µ–Ω–∏–π: –∏—é–ª—å‚Äì–∞–≤–≥—É—Å—Ç\n"
            "- –≠–∫–∑–∞–º–µ–Ω—ã/–ï–ù–¢: –∏—é–ª—å\n"
            "- –ó–∞—á–∏—Å–ª–µ–Ω–∏–µ: –∞–≤–≥—É—Å—Ç\n"
        )

    elif query.data == "abit_programs":
        query.edit_message_text(
            "üéØ –ü—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è:\n\n"
            "- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏\n"
            "- –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—É–∫–∏\n"
            "- –ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ –Ω–∞—É–∫–∏\n"
            "- –≠–∫–æ–Ω–æ–º–∏–∫–∞ –∏ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç\n"
            "- –ò—Å–∫—É—Å—Å—Ç–≤–æ –∏ –∫—É–ª—å—Ç—É—Ä–∞\n\n"
            "–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ üëâ www.auezov.edu.kz"
        )

    elif query.data == "abit_grants":
        query.edit_message_text(
            "üí∞ –ì—Ä–∞–Ω—Ç—ã –∏ —Å—Ç–∏–ø–µ–Ω–¥–∏–∏:\n\n"
            "- –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –≥—Ä–∞–Ω—Ç—ã –ú–û–ù –†–ö\n"
            "- –ì—Ä–∞–Ω—Ç—ã –∞–∫–∏–º–∞—Ç–æ–≤\n"
            "- –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∏–µ –≥—Ä–∞–Ω—Ç—ã\n"
            "- –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ø–µ–Ω–¥–∏–∏\n"
            "- –ò–º–µ–Ω–Ω—ã–µ —Å—Ç–∏–ø–µ–Ω–¥–∏–∏\n"
        )

    elif query.data == "abit_contacts":
        query.edit_message_text(
            "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–∏—ë–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏:\n\n"
            "–¢–µ–ª.: +7 (7252) 32-17-37\n"
            "Email: priem@auezov.edu.kz\n"
            "–ê–¥—Ä–µ—Å: –®—ã–º–∫–µ–Ω—Ç, –ø—Ä. –¢–∞—É–∫–µ —Ö–∞–Ω–∞, 5"
        )

    # --- –°—Ç—É–¥–µ–Ω—Ç–∞–º ---
    elif query.data == "students":
        keyboard = [
            [InlineKeyboardButton("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="stud_schedule")],
            [InlineKeyboardButton("üí∞ –°—Ç–∏–ø–µ–Ω–¥–∏–∏", callback_data="stud_scholarship")],
            [InlineKeyboardButton("üè† –û–±—â–µ–∂–∏—Ç–∏–µ", callback_data="stud_dorm")],
            [InlineKeyboardButton("üñ• –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="stud_cabinet")],
            [InlineKeyboardButton("üìë –î–µ–∫–∞–Ω–∞—Ç –∏ –∫—É—Ä–∞—Ç–æ—Ä", callback_data="stud_dekanat")],
            [InlineKeyboardButton("üèÄ –°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∞—è –∂–∏–∑–Ω—å", callback_data="stud_life")],
            [InlineKeyboardButton("üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="stud_support")],
            [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="main_menu")],
        ]
        query.edit_message_text(
            "üìö –†–∞–∑–¥–µ–ª –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    elif query.data == "stud_schedule":
        query.edit_message_text(
            "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ: https://auezov.edu.kz\n"
            "–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å –≤ –¥–µ–∫–∞–Ω–∞—Ç–µ —Å–≤–æ–µ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞."
        )

    elif query.data == "stud_scholarship":
        query.edit_message_text(
            "üí∞ –°—Ç–∏–ø–µ–Ω–¥–∏–∏:\n\n"
            "- –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è\n"
            "- –°–æ—Ü–∏–∞–ª—å–Ω–∞—è\n"
            "- –ò–º–µ–Ω–Ω—ã–µ –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ\n\n"
            "–í—ã–ø–ª–∞—Ç—ã –µ–∂–µ–º–µ—Å—è—á–Ω–æ, —É—Ç–æ—á–Ω—è–π—Ç–µ –≤ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏ –∏–ª–∏ –¥–µ–∫–∞–Ω–∞—Ç–µ."
        )

    elif query.data == "stud_dorm":
        query.edit_message_text(
            "üè† –û–±—â–µ–∂–∏—Ç–∏–µ:\n\n"
            "- –ó–∞—è–≤–∫–∞ —á–µ—Ä–µ–∑ –¥–µ–∫–∞–Ω–∞—Ç –∏–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ –¥–µ–ª–∞–º –º–æ–ª–æ–¥–µ–∂–∏\n"
            "- –ù—É–∂–Ω—ã: —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏, —Ñ–æ—Ç–æ, –∑–∞—è–≤–ª–µ–Ω–∏–µ\n"
            "- –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: —É—Ç–æ—á–Ω—è–µ—Ç—Å—è –µ–∂–µ–≥–æ–¥–Ω–æ\n"
            "- –ö–æ–Ω—Ç–∞–∫—Ç—ã –∫–æ–º–µ–Ω–¥–∞–Ω—Ç–∞ —É—Ç–æ—á–Ω—è–π—Ç–µ –≤ –¥–µ–∫–∞–Ω–∞—Ç–µ"
        )

    elif query.data == "stud_cabinet":
        query.edit_message_text(
            "üñ• –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞: https://smart.ukgu.kz\n\n"
            "–¢–∞–º –º–æ–∂–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ü–µ–Ω–∫–∏, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –ø–æ–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫–∏."
        )

    elif query.data == "stud_dekanat":
        query.edit_message_text(
            "üìë –î–µ–∫–∞–Ω–∞—Ç –∏ –∫—É—Ä–∞—Ç–æ—Ä:\n\n"
            "- –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –¥–µ–∫–∞–Ω–∞—Ç —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞\n"
            "- –ö—É—Ä–∞—Ç–æ—Ä –ø–æ–º–æ–≥–∞–µ—Ç —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π"
        )

    elif query.data == "stud_life":
        query.edit_message_text(
            "üèÄ –°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∞—è –∂–∏–∑–Ω—å:\n\n"
            "- –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–µ–∫—Ü–∏–∏\n"
            "- –ö—Ä—É–∂–∫–∏ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º\n"
            "- –í–æ–ª–æ–Ω—Ç—ë—Ä—Å–∫–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è\n"
            "- –ö–æ–Ω–∫—É—Ä—Å—ã –∏ —Ñ–µ—Å—Ç–∏–≤–∞–ª–∏\n\n"
            "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –∞–Ω–æ–Ω—Å–∞–º–∏ –Ω–∞ —Å–∞–π—Ç–µ –∏ –≤ Telegram-–∫–∞–Ω–∞–ª–∞—Ö."
        )

    elif query.data == "stud_support":
        query.edit_message_text(
            "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:\n\n"
            "- –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤–µ—Ä–∏—è\n"
            "- –¶–µ–Ω—Ç—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏\n"
            "- –û—Ç–¥–µ–ª –ø–æ –¥–µ–ª–∞–º –º–æ–ª–æ–¥–µ–∂–∏\n"
            "- –°—Ç—É–¥—Å–æ–≤–µ—Ç —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞"
        )

    # --- –ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –ò–ò ---
    elif query.data == "contacts":
        query.edit_message_text(
            "‚òé –ö–æ–Ω—Ç–∞–∫—Ç—ã —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞:\n\n"
            "üìç –®—ã–º–∫–µ–Ω—Ç, –ø—Ä. –¢–∞—É–∫–µ —Ö–∞–Ω–∞, 5\n"
            "üìû +7 (7252) 32-17-37\n"
            "üåê www.auezov.edu.kz"
        )

    elif query.data == "ask_ai":
        query.edit_message_text("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ–ø—Ä–æ–±—É—é –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç üëá")

    elif query.data == "main_menu":
        keyboard = [
            [InlineKeyboardButton("üéì –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞–º", callback_data="abit")],
            [InlineKeyboardButton("üìö –°—Ç—É–¥–µ–Ω—Ç–∞–º", callback_data="students")],
            [InlineKeyboardButton("‚òé –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")],
            [InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ò–ò", callback_data="ask_ai")],
        ]
        query.edit_message_text(
            "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

# ====== –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ======
def handle_message(update: Update, context: CallbackContext):
    user_input = update.message.text

    if "waiting_for_answer" in context.user_data:
        new_question = context.user_data["waiting_for_answer"]
        new_answer = user_input
        questions.append(new_question)
        answers.append(new_answer)
        retrain()
        save_knowledge()
        update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –Ø –∑–∞–ø–æ–º–Ω–∏–ª —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å.")
        del context.user_data["waiting_for_answer"]
        return

    response = chatbot(user_input)
    if response:
        update.message.reply_text(response)
    else:
        update.message.reply_text("ü§î –Ø –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π:")
        context.user_data["waiting_for_answer"] = user_input

# ====== –ó–∞–ø—É—Å–∫ ======
def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(button))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
